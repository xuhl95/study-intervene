<?php
/**
 * 冒泡排序
 *
 * 原理解析:
 * 0.如果遇到相等的值不进行交换，那这种排序方式是稳定的排序方式。
 *
 * 1.原理：比较两个相邻的元素，将值大的元素交换到右边
 *
 * 2.思路：依次比较相邻的两个数，将比较小的数放在前面，比较大的数放在后面。
 *
 * 　　　　(1)第一次比较：首先比较第一和第二个数，将小数放在前面，将大数放在后面。
 *
 * 　　　　(2)比较第2和第3个数，将小数 放在前面，大数放在后面。
 *
 * 　　　　......
 *
 * 　　　　(3)如此继续，知道比较到最后的两个数，将小数放在前面，大数放在后面，重复步骤，直至全部排序完成
 *
 * 　　　　(4)在上面一趟比较完成后，最后一个数一定是数组中最大的一个数，所以在比较第二趟的时候，最后一个数是不参加比较的。
 *
 * 　　　　(5)在第二趟比较完成后，倒数第二个数也一定是数组中倒数第二大数，所以在第三趟的比较中，最后两个数是不参与比较的。
 *
 * 　　　　(6)依次类推，每一趟比较次数减少依次
 */

function bubbleSort(array $arr) {
    // 第一层可以理解为从数组中键为0开始循环到最后一个
    for ($i = 0; $i < count($arr); $i++) {
        for ($j = $i + 1; $j < count($arr); $j++) {
            // 比较数组中两个相邻值的大小
            if ($arr[$i] > $arr[$j]) {
                $tmp     = $arr[$j]; // 临时变量从放$i的值
                $arr[$j] = $arr[$i]; // 第一次更换位置
                $arr[$i] = $tmp; // 完成位置互换
            }
        }
    }

    return $arr;
}

print_r(bubbleSort([23, 15, 43, 25, 54, 2, 6, 82, 11, 5, 21, 32, 65]));